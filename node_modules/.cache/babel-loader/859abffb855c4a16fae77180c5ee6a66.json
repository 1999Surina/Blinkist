{"ast":null,"code":"var _jsxFileName = \"/home/surinas/Assignment/React-Assignment-State-Mgmt-master/src/Organisms/GridOfBooks/GridOfFinishedBooks.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from '@mui/styles';\nimport CurrentCard from \"../../Molecules/BookCard/CurrentCard\";\nimport FinishedReading from \"./FinishedReading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  grid: {\n    marginTop: '25px',\n    paddingRight: '464px'\n  }\n});\n\nconst GridOfFinishedBooks = props => {\n  _s();\n\n  const classes = useStyles();\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.grid,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        columnSpacing: \"140px\",\n        rowSpacing: \"40px\",\n        children: FinishedReading.filter(book => book.name.toLowerCase().includes(props.searchTerm.toLowerCase())).map(book => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(CurrentCard, {\n            image: book.src,\n            bookName: book.name,\n            author: book.author,\n            readTime: book.duration,\n            reads: book.noOfReads,\n            buttonName: \"Read again\",\n            id: book.id,\n            incCount: () => setCount(count + 1)\n          }, book.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this)\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 238\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 2\n    }, this)\n  }, void 0, false);\n};\n\n_s(GridOfFinishedBooks, \"7M30Y8rSv8rVs5rCPTLgMT2sYAo=\", false, function () {\n  return [useStyles];\n});\n\n_c = GridOfFinishedBooks;\nexport default GridOfFinishedBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridOfFinishedBooks\");","map":{"version":3,"sources":["/home/surinas/Assignment/React-Assignment-State-Mgmt-master/src/Organisms/GridOfBooks/GridOfFinishedBooks.tsx"],"names":["Grid","React","useState","makeStyles","CurrentCard","FinishedReading","useStyles","grid","marginTop","paddingRight","GridOfFinishedBooks","props","classes","count","setCount","filter","book","name","toLowerCase","includes","searchTerm","map","src","author","duration","noOfReads","id"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,eAArB;AACA,OAAOC,KAAP,IAAiBC,QAAjB,QAAiC,OAAjC;AAEA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAMA,MAAMC,SAAS,GAACH,UAAU,CAAC;AAEvBI,EAAAA,IAAI,EACJ;AACIC,IAAAA,SAAS,EAAC,MADd;AAEIC,IAAAA,YAAY,EAAC;AAFjB;AAHuB,CAAD,CAA1B;;AAYA,MAAMC,mBAAkD,GAAEC,KAAD,IACzD;AAAA;;AAEI,QAAMC,OAAO,GAACN,SAAS,EAAvB;AACA,QAAM,CAACO,KAAD,EAAOC,QAAP,IAAiBZ,QAAQ,CAAC,CAAD,CAA/B;AAEA,sBACI;AAAA,2BAGP,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAEU,OAAO,CAACL,IAAnC;AAAA,6BACK,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,aAAa,EAAC,OAA9B;AAAsC,QAAA,UAAU,EAAC,MAAjD;AAAA,kBACGF,eAAe,CAACU,MAAhB,CAAwBC,IAAD,IAA2BA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCR,KAAK,CAACS,UAAN,CAAiBF,WAAjB,EAAjC,CAAlD,EAAoHG,GAApH,CAAyHL,IAAD,iBAA4G,QAAC,IAAD;AAAoB,UAAA,IAAI,MAAxB;AAAyB,UAAA,EAAE,EAAE,EAA7B;AAAiC,UAAA,EAAE,EAAE,CAArC;AAAwC,UAAA,EAAE,EAAE,CAA5C;AAAA,iCACnO,QAAC,WAAD;AAA2B,YAAA,KAAK,EAAEA,IAAI,CAACM,GAAvC;AAA4C,YAAA,QAAQ,EAAEN,IAAI,CAACC,IAA3D;AAAiE,YAAA,MAAM,EAAED,IAAI,CAACO,MAA9E;AAAsF,YAAA,QAAQ,EAAEP,IAAI,CAACQ,QAArG;AACA,YAAA,KAAK,EAAER,IAAI,CAACS,SADZ;AACuB,YAAA,UAAU,EAAE,YADnC;AACiD,YAAA,EAAE,EAAET,IAAI,CAACU,EAD1D;AAC8D,YAAA,QAAQ,EAAE,MAAIZ,QAAQ,CAACD,KAAK,GAAC,CAAP;AADpF,aAAkBG,IAAI,CAACU,EAAvB;AAAA;AAAA;AAAA;AAAA;AADmO,WAAWV,IAAI,CAACU,EAAhB;AAAA;AAAA;AAAA;AAAA,gBAApO;AADH;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA;AAHO,mBADJ;AAkBH,CAxBD;;GAAMhB,mB;UAGYJ,S;;;KAHZI,mB;AA0BN,eAAeA,mBAAf","sourcesContent":["import { Grid } from \"@mui/material\";\nimport React, {  useState } from \"react\";\n\nimport { makeStyles } from '@mui/styles';\nimport CurrentCard from \"../../Molecules/BookCard/CurrentCard\";\nimport FinishedReading from \"./FinishedReading\";\n\n\n\n\n\nconst useStyles=makeStyles({\n        \n    grid:\n    {\n        marginTop:'25px',\n        paddingRight:'464px'\n    }\n\n});\ninterface Props{\n  searchTerm:string\n}\nconst GridOfFinishedBooks:React.FunctionComponent<Props>=(props)=>\n{\n\n    const classes=useStyles();\n    const [count,setCount]=useState(0);\n\n    return(\n        <>\n\n       \n <Grid container className={classes.grid} >\n      <Grid container columnSpacing=\"140px\" rowSpacing=\"40px\">\n        {FinishedReading.filter((book: { name: string; })=>book.name.toLowerCase().includes(props.searchTerm.toLowerCase())).map((book: { id: number; src: string; name: string; author: string; duration: string; noOfReads: string; })=> ( <Grid key={book.id} item xs={12} sm={6} md={4}>\n          <CurrentCard key={book.id} image={book.src} bookName={book.name} author={book.author} readTime={book.duration}\n          reads={book.noOfReads} buttonName={\"Read again\"} id={book.id} incCount={()=>setCount(count+1)}        />\n        </Grid>\n        ))}        \n      </Grid>\n      </Grid>\n        \n\n\n        </>\n    );\n}\n\nexport default GridOfFinishedBooks;"]},"metadata":{},"sourceType":"module"}