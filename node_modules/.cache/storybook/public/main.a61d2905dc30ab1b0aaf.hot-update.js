"use strict";
globalThis["webpackHotUpdatemy_app"]("main",{

/***/ "./src/components/atoms/Buttons/Buttons.stories.tsx":
/*!**********************************************************!*\
  !*** ./src/components/atoms/Buttons/Buttons.stories.tsx ***!
  \**********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__namedExportsOrder": () => (/* binding */ __namedExportsOrder),
/* harmony export */   "addButton": () => (/* binding */ addButton),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "finishedButton": () => (/* binding */ finishedButton),
/* harmony export */   "readNowButton": () => (/* binding */ readNowButton),
/* harmony export */   "sendToKindleButton": () => (/* binding */ sendToKindleButton)
/* harmony export */ });
/* harmony import */ var _Buttons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Buttons */ "./src/components/atoms/Buttons/Buttons.tsx");
/* harmony import */ var _Buttons__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Buttons__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Icons */ "./src/Icons.tsx");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/home/surinas/Assignment/React-Assignment-State-Mgmt-master/src/components/atoms/Buttons/Buttons.stories.tsx";

/* eslint-disable */
// @ts-nocheck
// @ts-ignore
var __STORY__ = "import { ComponentStory, ComponentMeta } from \"@storybook/react\";\nimport Buttons from \"./Buttons\";\nimport { AddIcon, RightArrowIcon } from \"../../../Icons\";\n\nexport default {\n\ttitle: \"atoms/Buttons\",\n\tcomponent: Buttons,\n} as ComponentMeta<typeof Buttons>;\n\nconst Template: ComponentStory<typeof Buttons> = (args) => (\n\t<Buttons {...args} />\n);\n\nexport const addButton = Template.bind({});\n\naddButton.args = {\n\tchildren: \"Add to Library\",\n\tstartIcon: (\n\t\t<AddIcon sx={{ height: \"24px\", display: \"flex\", marginTop: \"5px\" }} />\n\t),\n\twidth: \"286px\",\n\theight: \"52px\",\n\tvariant: \"contained\",\n\tcolor: \"secondary\",\n};\n\nexport const finishedButton = Template.bind({});\n\nfinishedButton.args = {\n\tchildren: \"Finished\",\n\twidth: \"170px\",\n\theight: \"44px\",\n\tvariant: \"contained\",\n\tcolor: \"primary\",\n};\n\nexport const readNowButton = Template.bind({});\n\nreadNowButton.args = {\n\tchildren: \"Read now\",\n\twidth: \"122px\",\n\theight: \"44px\",\n\tvariant: \"outlined\",\n\tcolor: \"primary\",\n};\n\nexport const sendToKindleButton = Template.bind({});\n\nsendToKindleButton.args = {\n\tchildren: \"Send to Kindle\",\n\twidth: \"151px\",\n\theight: \"44px\",\n\tvariant: \"text\",\n\tcolor: \"text2\",\n\tendIcon: (\n\t\t<RightArrowIcon sx={{ position: \"relative\", left: \"15px\", top: \"10px\" }} />\n\t),\n};\n"; // @ts-ignore

var __LOCATIONS_MAP__ = {
  "addButton": {
    "startLoc": {
      "col": 49,
      "line": 10
    },
    "endLoc": {
      "col": 1,
      "line": 12
    },
    "startBody": {
      "col": 49,
      "line": 10
    },
    "endBody": {
      "col": 1,
      "line": 12
    }
  },
  "finishedButton": {
    "startLoc": {
      "col": 49,
      "line": 10
    },
    "endLoc": {
      "col": 1,
      "line": 12
    },
    "startBody": {
      "col": 49,
      "line": 10
    },
    "endBody": {
      "col": 1,
      "line": 12
    }
  },
  "readNowButton": {
    "startLoc": {
      "col": 49,
      "line": 10
    },
    "endLoc": {
      "col": 1,
      "line": 12
    },
    "startBody": {
      "col": 49,
      "line": 10
    },
    "endBody": {
      "col": 1,
      "line": 12
    }
  },
  "sendToKindleButton": {
    "startLoc": {
      "col": 49,
      "line": 10
    },
    "endLoc": {
      "col": 1,
      "line": 12
    },
    "startBody": {
      "col": 49,
      "line": 10
    },
    "endBody": {
      "col": 1,
      "line": 12
    }
  }
};



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: "atoms/Buttons",
  component: (_Buttons__WEBPACK_IMPORTED_MODULE_0___default())
});

const Template = args => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)((_Buttons__WEBPACK_IMPORTED_MODULE_0___default()), { ...args
}, void 0, false, {
  fileName: _jsxFileName,
  lineNumber: 19,
  columnNumber: 2
}, undefined);

_c = Template;
const addButton = Template.bind({});
;
addButton.args = {
  children: "Add to Library",
  startIcon: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_Icons__WEBPACK_IMPORTED_MODULE_1__.AddIcon, {
    sx: {
      height: "24px",
      display: "flex",
      marginTop: "5px"
    }
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 27,
    columnNumber: 3
  }, undefined),
  width: "286px",
  height: "52px",
  variant: "contained",
  color: "secondary"
};
const finishedButton = Template.bind({});
;
finishedButton.args = {
  children: "Finished",
  width: "170px",
  height: "44px",
  variant: "contained",
  color: "primary"
};
const readNowButton = Template.bind({});
;
readNowButton.args = {
  children: "Read now",
  width: "122px",
  height: "44px",
  variant: "outlined",
  color: "primary"
};
const sendToKindleButton = Template.bind({});
sendToKindleButton.args = {
  children: "Send to Kindle",
  width: "151px",
  height: "44px",
  variant: "text",
  color: "text2",
  endIcon: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_Icons__WEBPACK_IMPORTED_MODULE_1__.RightArrowIcon, {
    sx: {
      position: "relative",
      left: "15px",
      top: "10px"
    }
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 64,
    columnNumber: 3
  }, undefined)
};
addButton.parameters = {
  storySource: {
    source: "(args) => (\n\t<Buttons {...args} />\n)"
  },
  ...addButton.parameters
};
finishedButton.parameters = {
  storySource: {
    source: "(args) => (\n\t<Buttons {...args} />\n)"
  },
  ...finishedButton.parameters
};
readNowButton.parameters = {
  storySource: {
    source: "(args) => (\n\t<Buttons {...args} />\n)"
  },
  ...readNowButton.parameters
};
sendToKindleButton.parameters = {
  storySource: {
    source: "(args) => (\n\t<Buttons {...args} />\n)"
  },
  ...sendToKindleButton.parameters
};

var _c;

__webpack_require__.$Refresh$.register(_c, "Template");
const __namedExportsOrder = ["addButton", "finishedButton", "readNowButton", "sendToKindleButton"];

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});
//# sourceMappingURL=main.a61d2905dc30ab1b0aaf.hot-update.js.map